{"version":3,"sources":["Img.js","Layout.js","Detail.js","Main.js","About.js","App.js","reportWebVitals.js","index.js"],"names":["CroppedImage","_ref","src","width","height","React","createElement","style","overflow","concat","heignht","LanguageSelector","Component","constructor","super","arguments","this","handleText1Click","document","cookie","handleText2Click","render","onClick","SearchForm","navigate","useNavigate","query","setQuery","useState","type","value","onChange","e","target","placeholder","handleSearch","encodeURIComponent","window","location","reload","Layout","themes","children","day","setDay","language","useRef","match","useMatch","URL","href","current","replace","useEffect","fetch","then","response","json","data","img","image","map","item","index","key","className","toString","split","id","title","Detail","news","setNews","setThemes","arg","useParams","url2","URLSearchParams","search","async","data_1","themeList","Object","values","formattedDate","date","today","Date","getDate","month","getMonth","minutes","getFullYear","getMinutes","hours","getHours","intMinutes","parseInt","formattedMinutes","formatDate","article_text","sentence","wordsCount","length","countWords","Math","ceil","calculateMinutes","theme","Index","props","word","url","number","text","wordCount","words","croppedText","slice","join","cropTextByWordCount","AboutUs","Contact","Confidenc","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.f8670423.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction CroppedImage({ src, width, height }) {\n  return (\n    <div style={{ width: width, height: height, overflow: \"hidden\" }}>\n      {/* <img src={`/media/${src}`} style={{ width: \"100%\", height: \"auto\" }} /> */}\n      <img\n        src={`http://localhost:8000/media/${src}`}\n        style={{ width: \"100%\", heignht: \"auto\" }}\n      />\n    </div>\n  );\n}\n\nexport default CroppedImage;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport CroppedImage from \"./Img\";\nimport { useMatch } from \"react-router-dom\";\n\nclass LanguageSelector extends React.Component {\n  handleText1Click = () => {\n    document.cookie = \"lang=_ru\";\n  };\n\n  handleText2Click = () => {\n    document.cookie = \"lang=_en\";\n  };\n\n  render() {\n    return (\n      <div>\n        <p onClick={this.handleText1Click}>Russian</p>\n        <p onClick={this.handleText2Click}>English</p>\n      </div>\n    );\n  }\n}\n\nconst SearchForm = () => {\n  const navigate = useNavigate();\n  const [query, setQuery] = useState(\"\");\n  const handleSearch = () => {\n    // onSearch(encodeURIComponent(query));\n    navigate(`/search/${encodeURIComponent(query)}`);\n    window.location.reload(false);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Введите запрос\"\n      />\n      <button onClick={handleSearch}>Найти</button>\n    </div>\n  );\n};\n\nconst Layout = ({ themes, children }) => {\n  const [day, setDay] = useState(\"\");\n  const language = useRef(\"\");\n  const match = useMatch(\"/\");\n  const url2 = new URL(window.location.href);\n  language.current = document.cookie.replace(/lang=_ru(; )?/, \"\");\n  useEffect(() => {\n    fetch(`/api/day/?lang=${language.current || \"\"}`)\n      // fetch(\"http://localhost:8000/api/day/\")\n      .then((response) => response.json())\n      .then((data) => {\n        setDay(data[0]);\n      });\n  }, [children]);\n  const news = day;\n  const img = news.image;\n\n  return (\n    <div>\n      {match && (\n        <div>\n          {language.current === \"_en\" ? (\n            <a href=\"/\">Main Page</a>\n          ) : (\n            <a href=\"/\">Главная</a>\n          )}\n        </div>\n      )}\n      {themes.map((item, index) => (\n        <h2 key={index} className={item}>\n          <a href={`/${item.toString().split(\",\")[0]}`}>\n            {item\n              .toString()\n              .match(/\\d+(.*)$/)[1]\n              .replace(\",\", \"\")}\n          </a>\n        </h2>\n      ))}\n      <h3>\n        <a href=\"/aboutUs/\">О нас</a>\n        <a href=\"/contact/\">Контакты</a>\n      </h3>\n      <SearchForm />\n      <LanguageSelector />\n      <div>\n        <a href={\"/\" + day.id}>\n          <h1>Новость дня - {day.title}</h1>\n          <CroppedImage src={img} width={200} height={200} />\n        </a>\n      </div>\n      {children}\n      <footer>\n        <p>\n          <a href=\"/confidenc/\">Пользовательское соглашение</a>\n        </p>\n        <h1>2023 - KosmoNews</h1>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n","import Layout from \"./Layout\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CroppedImage from \"./Img\";\n\nfunction countWords(sentence) {\n  const words = sentence.split(\" \");\n  return words.length;\n}\n\nfunction calculateMinutes(sentence) {\n  const wordsCount = countWords(sentence);\n  const minutes = Math.ceil(wordsCount / 150);\n\n  if (minutes === 1) {\n    return \"1 минута\";\n  } else if (minutes > 1 && minutes < 5) {\n    return minutes + \" минуты\";\n  } else {\n    return minutes + \" минут\";\n  }\n}\n\nconst Detail = () => {\n  const [news, setNews] = useState({});\n  const [themes, setThemes] = useState([]);\n  const { arg } = useParams();\n  const language = useRef(\"\");\n  const url2 = new URL(window.location.href);\n  const searchParams = new URLSearchParams(url2.search);\n  language.current = document.cookie.replace(/lang=_ru(; )?/, \"\");\n  useEffect(() => {\n    fetch(`/api/themes/?lang=${language.current}}`)\n      // fetch(\"http://localhost:8000/api/themes\")\n      .then((response) => response.json())\n      .then(async (data) => {\n        setThemes(data);\n        const response = await fetch(\n          `/api/${arg}/?lang=${language.current || \"\"}`\n        );\n        // const response = await fetch(`http://localhost:8000/api/${arg}/`);\n        const data_1 = await response.json();\n        setNews(data_1);\n      });\n  }, [arg]);\n\n  // Форматирование даты\n  const formatDate = (date) => {\n    let months = [\n      \"января\",\n      \"февраля\",\n      \"марта\",\n      \"апреля\",\n      \"мая\",\n      \"июня\",\n      \"июля\",\n      \"августа\",\n      \"сентября\",\n      \"октября\",\n      \"ноября\",\n      \"декабря\",\n    ];\n\n    let today = new Date(date);\n    let day = today.getDate();\n    let month = months[today.getMonth()];\n    let year = today.getFullYear();\n    let minutes = today.getMinutes();\n    let hours = today.getHours();\n    const intMinutes = parseInt(minutes, 10);\n    const formattedMinutes = intMinutes < 10 ? `0${intMinutes}` : intMinutes;\n\n    return `${hours}:${formattedMinutes}. ${day} ${month}`;\n  };\n\n  const themeList = Object.values(themes);\n  const formattedDate = formatDate(news.date);\n  let img = news.image;\n  return (\n    <Layout themes={themeList}>\n      <div>\n        <h1>{news.title}</h1>\n        <h2>\n          Время чтения:\n          {news.article_text\n            ? calculateMinutes(news.article_text)\n            : \"Расчет времени...\"}\n        </h2>\n        <CroppedImage src={img} height={1000} width={1000} />\n        <h3>{themes[news.theme]}</h3>\n        <h4>{formattedDate}</h4>\n        <h2>{news.article_text}</h2>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Detail;\n","import Layout from \"./Layout\";\nimport { useState, useEffect, useRef } from \"react\";\nimport CroppedImage from \"./Img\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction cropTextByWordCount(text, wordCount) {\n  const words = text.split(\" \");\n\n  const croppedText = words.slice(0, wordCount).join(\" \");\n\n  if (words.length > wordCount) {\n    return croppedText + \" ...\";\n  }\n\n  return croppedText;\n}\n\nconst Index = (props) => {\n  const language = useRef(\"\");\n  const url2 = new URL(window.location.href);\n  const searchParams = new URLSearchParams(url2.search);\n  language.current = document.cookie.replace(/lang=_ru(; )?/, \"\");\n\n  const { word } = useParams();\n  if (props.url === \"search\") {\n    var url = `search/${word}?lang=${language.current || \"\"}`;\n  } else {\n    var url = `${props.url}/?lang=${language.current || \"\"}`;\n  }\n\n  const [themes, setThemes] = useState([]);\n  const [news, setNews] = useState([]);\n  useEffect(() => {\n    fetch(`/api/themes/?lang=${language.current}`)\n      // fetch(\"http://localhost:8000/api/themes/\")\n      .then((response) => response.json())\n      .then(async (data) => {\n        setThemes(data);\n        const response = await fetch(`/api/${url}`);\n        // const response = await fetch(`http://localhost:8000/api/${url}`);\n        const data_1 = await response.json();\n        setNews(data_1);\n      });\n  }, [props.url]);\n  const themeList = Object.values(themes);\n\n  return (\n    <Layout themes={themeList}>\n      {props.url === \"search\" &&\n        (language.current === \"_en\" ? (\n          <h1>Search results by word \"{word}\"</h1>\n        ) : (\n          <h1>Результаты поиска по слову \"{word}\"</h1>\n        ))}\n      {news.map((item, number) => {\n        let img = item.image;\n\n        let today = new Date(item.date);\n        let minutes = today.getMinutes();\n        let hours = today.getHours();\n        const intMinutes = parseInt(minutes, 10);\n        const formattedMinutes =\n          intMinutes < 10 ? `0${intMinutes}` : intMinutes;\n\n        let formattedDate = `${hours}:${formattedMinutes}`;\n        return (\n          <div>\n            <a key={number} href={\"/\" + item.id}>\n              <h1 className=\"titleOfNews\">{item.title}</h1>\n              <h2>{formattedDate}</h2>\n              {props.url === \"search\" &&\n                cropTextByWordCount(item.article_text, 56)}\n              <CroppedImage src={img} width={400} height={400} />\n            </a>\n          </div>\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport default Index;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Layout from \"./Layout\";\n\nconst AboutUs = () => {\n  const [themes, setThemes] = useState([]);\n  const language = useRef(null);\n  const url2 = new URL(window.location.href);\n  const searchParams = new URLSearchParams(url2.search);\n  language.current = document.cookie.replace(/lang=_ru(; )?/, \"\");\n\n  useEffect(() => {\n    fetch(`/api/themes/?lang=${language.current}`)\n      // fetch(\"http://localhost:8000/api/themes\")\n      .then((response) => response.json())\n      .then(async (data) => {\n        setThemes(data);\n      });\n  }, []);\n  const themeList = Object.values(themes);\n  return (\n    <Layout themes={themeList}>\n      <p>\n        Добро пожаловать на KosmoNews – ваш источник самых последних новостей,\n        открытий и анализов в области космополитологии. Мы глубоко погружаемся в\n        мир новостей, предлагая увлекательные статьи, интервью и мнения от\n        ведущих экспертов и исследователей\n      </p>\n    </Layout>\n  );\n};\n\nconst Contact = () => {\n  const language = useRef(null);\n  const url2 = new URL(window.location.href);\n  const searchParams = new URLSearchParams(url2.search);\n  language.current = document.cookie.replace(/lang=_ru(; )?/, \"\");\n  const [themes, setThemes] = useState([]);\n  useEffect(() => {\n    fetch(`/api/themes/?lang=${language.current}`)\n      // fetch(\"http://localhost:8000/api/themes\")\n      .then((response) => response.json())\n      .then(async (data) => {\n        setThemes(data);\n      });\n  }, []);\n  const themeList = Object.values(themes);\n  return (\n    <Layout themes={themeList}>\n      <p>Телефон: +71234567890 Почта: example@example.com</p>\n    </Layout>\n  );\n};\n\nconst Confidenc = () => {\n  const language = useRef(null);\n  const url2 = new URL(window.location.href);\n  const searchParams = new URLSearchParams(url2.search);\n  language.current = document.cookie.replace(/lang=_ru(; )?/, \"\");\n  const [themes, setThemes] = useState([]);\n  useEffect(() => {\n    fetch(`/api/themes/?lang=${language.current}`)\n      // fetch(\"http://localhost:8000/api/themes\")\n      .then((response) => response.json())\n      .then(async (data) => {\n        setThemes(data);\n      });\n  }, []);\n  const themeList = Object.values(themes);\n  return (\n    <Layout themes={themeList}>\n      <p>Наша политика. Мы ни за что не отвечаем</p>\n    </Layout>\n  );\n};\n\nexport { AboutUs, Contact, Confidenc };\n","import React from \"react\";\nimport Detail from \"./Detail\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Index from \"./Main\";\nimport { AboutUs, Confidenc, Contact } from \"./About\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"\" element={<Index url=\"\" />} />\n        <Route path=\":arg\" element={<Detail />} />\n        <Route path=\"aboutUs\" element={<AboutUs />} />\n        <Route path=\"theme1\" element={<Index url=\"politics\" />} />\n        <Route path=\"theme2\" element={<Index url=\"region\" />} />\n        <Route path=\"theme3\" element={<Index url=\"investments\" />} />\n        <Route path=\"search/:word\" element={<Index url=\"search\" />} />\n        <Route path=\"contact\" element={<Contact />} />\n        <Route path=\"confidenc\" element={<Confidenc />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(<React.StrictMode>{<App />}</React.StrictMode>);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}